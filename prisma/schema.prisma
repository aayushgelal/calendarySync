generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                  String         @id @default(cuid())
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  ext_expires_in      Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  user                User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  sourceCalendarSyncs CalendarSync[] @relation("SourceAccount")
  targetCalendarSyncs CalendarSync[] @relation("TargetAccount")
  isSubAccount        Boolean        @default(false)
  email               String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String         @id @default(cuid())
  name                  String?
  email                 String?        @unique
  emailVerified         DateTime?
  image                 String?
  access_token          String?
  subscriptionId        String?
  subscriptionStatus    String?
  subscriptionExpiresAt DateTime?
  accounts              Account[]
  calendarSyncs         CalendarSync[]
  sessions              Session[]
}

model CalendarSync {
  id                String    @id @default(cuid())
  userId            String
  sourceAccountId   String
  targetAccountId   String
  sourceProvider    String    @default("google")
  sourceCalendarId  String
  targetCalendarId  String
  sourceCalendarName String?
  targetCalendarName String?
  hideDetails       Boolean   @default(true)
  weekdaysOnly      Boolean   @default(true)
  workingHoursStart String    @default("09:00")
  workingHoursEnd   String    @default("17:00")
  roundToNearest    Int       @default(15)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  webhookChannelId  String?
  webhookExpiration DateTime?
  webhookResourceId String?
  targetProvider    String    @default("google")
  sourceAccount     Account   @relation("SourceAccount", fields: [sourceAccountId], references: [id])
  targetAccount     Account   @relation("TargetAccount", fields: [targetAccountId], references: [id])
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Beta {
  id String @id @default(cuid())
  email String @unique
  createdAt DateTime @default(now())
}
